//=====================
//  Grid System
//=====================
.grid_column(@columns, @float: true, @offset: 0) {
  width: percentage(@columns / 12);
  
  & when (@float = true) {
    float: left;
  }
  & when (@float = false) {
    display: inline-table;
    margin-right: -4px;
  }
  & when (@offset > 0) {
    margin-left: percentage(@offset / 12);
  }
}
.grid_offset(@columns) {
  margin-left: percentage(@columns / 12);
}


//=====================
//  Extends
//=====================
.reset() {
  margin: 0;
  padding: 0;
}

.row() {
  float: left;
  width: 100%;
}

.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

.outline(@color: red, @thick: 1px) {
  outline: solid @thick @color;
}

.lineHeight(@fontSize) {
  line-height: @fontSize * 1.75;
}

//=====================
// FOR Loops
// Usage:
// @list: "item1","item2","item3";
// .for(@list); .-each(@item) {
//   @main: ~".@{item}";
//   @{main}{ ... }
// }
//=====================
.for(@i, @n) {.-each(@i)}
.for(@n)     when (isnumber(@n)) {.for(1, @n)}
.for(@i, @n) when not (@i = @n)  {
  .for((@i + (@n - @i) / abs(@n - @i)), @n);
}


//=====================
// FOREACH Loops
//
//===================== 
.for(@array)   when (default()) { .for-impl_(length(@array)) }
.for-impl_(@i) when (@i > 1)    { .for-impl_((@i - 1)) }
.for-impl_(@i) when (@i > 0)    { .-each(extract(@array, @i)) }


//=====================
// Sticky Footer
//=====================
.make_sticky_footer(@height) {
  .page-wrapper {
    margin-bottom: -@height;
  }
  .page-footer,
  .page-wrapper:after {
    height: @height;
  }
}


//=====================
//  Image Replacement
//=====================
.ir(@width:0, @height:0, @imgPath:'') {
  width: @width;
  height: @height;
  background: url(~'@{imgPath}');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: top center;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}


//=====================
//  Transitions
//=====================
.transition(@prop: all, @speed: 200ms, @easing: ease) {
  will-change: @prop;
  transition: @prop @speed @easing;
}


//=====================
//  Font Size
//=====================
.font_size(@size, @line-height: @size) {
  font-size: @size;
  line-height: @line-height;
}


//=====================
//  Make icon
//=====================
.make_icon(@name: '', @size: inherit) {
  @iconVar: 'icon-@{name}';
  @icon: @@iconVar;
  font-family: "__moip-icons";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: @icon;
  font-size: @size;
  vertical-align: middle;
}


//=====================
//  Triangles
//=====================
.make_triangle(@oriantation: 'up', @size: 1em, @color: @gray) {
  width: 0;
  height: 0;
  & when (@oriantation = 'up') {
    border-left: @size solid transparent;
    border-right: @size solid transparent;
    border-bottom: @size solid @color;
  }
  & when (@oriantation = 'right') {
    border-top: @size solid transparent;
    border-bottom: @size solid transparent;
    border-left: @size solid @color;
  }
  & when (@oriantation = 'down') {
    border-left: @size solid transparent;
    border-right: @size solid transparent;
    border-top: @size solid @color;
  }
  & when (@oriantation = 'left') {
    border-top: @size solid transparent;
    border-bottom: @size solid transparent;
    border-right:@size solid @color;
  }
}

//=================================
//  Button's basic configuration
//=================================
.default_button() {
  display: inline-block;
  cursor: pointer;
  border: none;
  text-align: center;
  text-decoration: none;
  border-radius: @border-radius;
  min-width: @button-small;
  height: @button-height;
  line-height: @button-height;
  font-size: @lg-font-size;
  padding: 0 @sm-spacer;
  letter-spacing: .05em;
}


//=================================
// Button's mixin 
//=================================
.make_button(@bgColor, @txtColor: @white) {
  font-family: @helvetica-light;
  color: @txtColor;
  background-color: @bgColor;
  .transition(background-color);
  &:hover,
  &:active{
    .transition(background-color);
  }
  &:hover{
    background-color: lighten(@bgColor, 5%);
  }
  &:active{
    background-color: darken(@bgColor, 5%);
  }
}
